1.
Состояние гонки (Race Condition) — это ошибка в многопоточной или распределенной системе,
когда результат работы программы зависит от непредсказуемого порядка выполнения операций несколькими потоками, обращающимися к общим ресурсам.
Поскольку порядок выполнения потоков невозможно точно определить, возникает "плавающая" ошибка с непредсказуемыми результатами,
которую сложно воспроизвести и исправить, — примеры включают некорректное обновление данных или неверное выполнение финансовых транзакций.

Race condition — ошибка проектирования многопоточной системы или приложения, при которой работа системы или приложения зависит от того, в каком порядке выполняются части кода.

Race condition — это недостаток, возникающий, когда время или порядок событий влияют на правильность программы.

2.
Data race это состояние когда разные потоки обращаются к одной ячейке памяти без какой-либо синхронизации
и как минимум один из потоков осуществляет запись.

3. 
В Golang deadlock (взаимоблокировка) — это состояние, при котором одна или несколько горутин (параллельных процессов) навсегда застревают,
ожидая освобождения ресурсов, занятых другими горутинами в этой же группе, что приводит к остановке выполнения всей программы.
Это часто происходит из-за некорректного управления синхронизацией или неправильного использования каналов

4. 

Характеристика горутин

Минимальный размер стека:
  Горутины начинаются с очень маленького стека (около 2 КБ), а не с большого, как у системных потоков. 
Динамическое управление стеком:
  Стек горутины может расширяться или сжиматься по мере необходимости во время выполнения, а не иметь фиксированный, большой размер. 
Среда выполнения Go:
  Среда выполнения Go управляет распределением горутин по потокам операционной системы, что позволяет эффективно использовать процессорные ресурсы и масштабировать приложение для тысяч конкурентных задач. 
Уменьшение накладных расходов:
  Go-рутины, в отличие от потоков ОС, не требуют выделения большого объема памяти, что снижает накладные расходы. 

5. Сравнение горутин и системных потоков

Потоки ОС:
  - Потоки ОС управляются ядром ОС	
  - Потоки ОС в основном имееют фиксированый размер в 1-2MB	
  - Размер стэка определяется во время компиляции и не может увеличиватся	
  - У потоков нету простого способа коммуникации между собой. Такая коммуникация имеет большую задержку	
Go-рутины:
  - Горутины управляются "рантаймом" Go
  - Горутины обычно имеют размер стэка 2KB
  - Размер стэка определяется во время рантайма и может расти вплоть до 1GB что возможно благодаря аллокации и освобождения места из хипа
  - Горутины используют "каналы" для быстрого общения между собой с маленькой задержкой
