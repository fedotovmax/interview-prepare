1.
Состояние гонки (Race Condition) — это ошибка в многопоточной или распределенной системе,
когда результат работы программы зависит от непредсказуемого порядка выполнения операций несколькими потоками, обращающимися к общим ресурсам.
Поскольку порядок выполнения потоков невозможно точно определить, возникает "плавающая" ошибка с непредсказуемыми результатами,
которую сложно воспроизвести и исправить, — примеры включают некорректное обновление данных или неверное выполнение финансовых транзакций.

Race condition — ошибка проектирования многопоточной системы или приложения, при которой работа системы или приложения зависит от того, в каком порядке выполняются части кода.

Race condition — это недостаток, возникающий, когда время или порядок событий влияют на правильность программы.

2.
Data race это состояние когда разные потоки обращаются к одной ячейке памяти без какой-либо синхронизации
и как минимум один из потоков осуществляет запись.

3. 
В Golang deadlock (взаимоблокировка) — это состояние, при котором одна или несколько горутин (параллельных процессов) навсегда застревают,
ожидая освобождения ресурсов, занятых другими горутинами в этой же группе, что приводит к остановке выполнения всей программы.
Это часто происходит из-за некорректного управления синхронизацией или неправильного использования каналов

