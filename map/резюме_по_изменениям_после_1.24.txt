В Go различие между «старой картой» и «новой картой» в первую очередь связано с изменениями во внутренней реализации карт в разных версиях Go,
в частности, со значительным обновлением, представленным в Go 1.24 с внедрением швейцарских таблиц.

Старая карта (до Go 1.24):
До Go 1.24 реализация карт в Go использовала собственную хеш-таблицу.
Эта конструкция включала контейнеры, которые могли содержать фиксированное количество пар «ключ-значение» (обычно 8).

Когда контейнер заполнялся или общий коэффициент загрузки превышал пороговое значение, карта проходила процесс «опустошения данных»,
в ходе которого выделялся новый, более крупный набор контейнеров, а данные из старых контейнеров постепенно переносились.
Это могло привести к снижению производительности при росте карты.

Управление памятью заключалось в том, что резервный массив карты не уменьшался, даже если записи удалялись,
что могло привести к некоторому перерасходу памяти в некоторых сценариях. Новая карта (Go 1.24 и более поздние версии):
В Go 1.24 представлена ​​переработанная реализация карты, вдохновленная высокопроизводительной швейцарской таблицей Google
(популяризированной в библиотеке Abseil для C++).

Эта новая реализация направлена ​​на ускорение поиска, снижение затрат памяти и более эффективное использование кэша.
Вместо одной большой хеш-таблицы новая реализация позволяет разбить карту на несколько независимых швейцарских таблиц, каждая из которых обрабатывает подмножество ключевого пространства. Это форма расширяемого хеширования.
Новая реализация разработана для более эффективного управления ростом и уменьшением карты, потенциально позволяя избежать некоторых проблем с производительностью, связанных с удалением данных в старой реализации.
Также она решает такие проблемы, как «время нарастания» для продвижения ключей в карту, доступную только для чтения, в sync.Map.

Вкратце:
Термины «старая карта» и «новая карта» в Go относятся к эволюции базовой структуры данных и алгоритмов,
используемых для реализации встроенного типа карты. «Новая карта» (Go 1.24+) обеспечивает улучшенную производительность
и более эффективное управление памятью по сравнению со «старой картой» (Go до 1.24) благодаря использованию швейцарской таблицы.
С точки зрения пользователя, взаимодействие с картами с помощью make, len, delete и т. д. осталось прежним, но внутренняя механика была значительно оптимизирована.