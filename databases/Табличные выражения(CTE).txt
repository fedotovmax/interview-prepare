WITH предоставляет способ записывать дополнительные операторы для применения в больших запросах.
Эти операторы, которые также называют общими табличными выражениями (Common Table Expressions, CTE),
можно представить как определения временных таблиц, существующих только для одного запроса.
Дополнительным оператором в предложении WITH может быть SELECT, INSERT, UPDATE или DELETE, 
а само предложение WITH присоединяется к основному оператору, которым также может быть SELECT, INSERT, UPDATE или DELETE.

1. Основное предназначение SELECT в предложении WITH заключается в разбиении сложных запросов на простые части. Например, запрос:

WITH regional_sales AS (
    SELECT region, SUM(amount) AS total_sales
    FROM orders
    GROUP BY region
   ), top_regions AS (
    SELECT region
    FROM regional_sales
    WHERE total_sales > (SELECT SUM(total_sales)/10 FROM regional_sales)
   )
SELECT region,
   product,
   SUM(quantity) AS product_units,
   SUM(amount) AS product_sales
FROM orders
WHERE region IN (SELECT region FROM top_regions)
GROUP BY region, product;

2. Удобно делать рекурсивные запросы при помощи CTE

WITH RECURSIVE category_tree AS (
		SELECT category_id, parent_category_id, slug, title, short_title, img_path, 1 AS level
		FROM category
		WHERE slug = $1
		UNION ALL
		SELECT c.category_id, c.parent_category_id, c.slug, c.title, c.short_title, c.img_path, ct.level + 1
		FROM category AS c
		INNER JOIN category_tree AS ct ON c.parent_category_id = ct.category_id
	)
	SELECT *
	FROM category_tree
	WHERE level IN (
		SELECT MAX(level) - 1
		FROM category_tree
		UNION
		SELECT MAX(level)
		FROM category_tree
) ORDER BY level DESC;

3. Можно делать операции модификации данных и переиспользовать их результат дальше

WITH moved_rows AS (
    DELETE FROM products
    WHERE
        "date" >= '2010-10-01' AND
        "date" < '2010-11-01'
    RETURNING *
)
INSERT INTO products_log
SELECT * FROM moved_rows;