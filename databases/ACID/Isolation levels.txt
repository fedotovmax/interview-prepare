1. Read Uncommitted

Формально есть, но в Postgres он работает так же, как Read Committed.

То есть "грязные" чтения (dirty read) не допускаются.

Можно читать только зафиксированные данные.
Нет смысла использовать в PostgreSQL, так как равен Read Committed.

2. Read Committed (уровень по умолчанию)

Каждое SELECT видит только те данные, которые были зафиксированы на момент начала запроса (не всей транзакции!).

Если в рамках транзакции сделать два запроса, они могут увидеть разные данные.

Аномалии:

Non-repeatable read (нельзя гарантировать одинаковый результат при повторном чтении).

Phantom read (могут появиться новые строки при повторном запросе).

3. Repeatable Read

Все запросы в одной транзакции видят снимок базы (snapshot) на момент начала транзакции.

Гарантирует:

Нет dirty read.

Нет non-repeatable read.

В PostgreSQL нет phantom read даже на этом уровне!
(так как используется MVCC со snapshot isolation).

Возможна аномалия serialization anomaly (см. ниже).

4. Serializable

Самый строгий уровень.

Транзакции исполняются так, как будто они выполнялись последовательно, а не параллельно.

В PostgreSQL реализовано через Serializable Snapshot Isolation (SSI):

Транзакции работают на snapshot (как в Repeatable Read).

Но дополнительно проверяются потенциальные конфликты.

Если конфликт есть → одна транзакция откатывается (serialization_failure).

Установка:

-- для одной транзакции
BEGIN TRANSACTION ISOLATION LEVEL REPEATABLE READ;

-- глобально для сессии
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;